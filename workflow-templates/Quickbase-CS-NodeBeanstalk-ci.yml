name: Deploy NodeJs Pipeline

env:
  APP_NAME: NodeJsSampleBeanstalk
  ENV_NAME: Nodejssamplebeanstalk-env
  S3_BUCKET: elasticbeanstalk-ap-northeast-1-978397049254
  AWS_REGION: ap-northeast-1
  AWS_PLATFORM: Docker
  PIPELINE_ID: ${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}
  NODE_ENV: production

on:
  push:
    branches: [master]

jobs:
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Set env to production
        if: endsWith(github.ref, '/master')
        run: |
          echo "application_name=${{env.APP_NAME}}" >> $GITHUB_ENV
          echo "environment_name=${{env.ENV_NAME}}" >> $GITHUB_ENV
          echo "NODE_ENV=${{env.NODE_ENV}}" >> $GITHUB_ENV
      - name: Setup node env
        uses: actions/setup-node@v2.1.2
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Installing NPM
        run: npm install

      # - name: Linting check
      #   run: npm run lint

      - name: Building application
        run: npm build

      - name: Generate deployment package
        run: zip -r deploy.zip * .[^.]* -x "**node_modules**"

      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Run string replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: "-"
          flags: "g"

      - name: Beanstalk Deploy for app
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws_secret_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          application_name: ${{ env.APP_NAME }}
          environment_name: ${{ env.ENV_NAME }}
          region: ${{ env.AWS_REGION }}
          version_label: "e-learn-${{ steps.format-time.outputs.replaced }}"
          deployment_package: deploy.zip

      - name: Deployed!
        run: echo App deployed to ELB