AWSTemplateFormatVersion: '2010-09-09'
Description: Creates an S3 bucket configured for hosting a static website, and a Route 53 DNS record pointing to the bucket

Parameters:
  S3BucketName:
    Type: String
    Description: Name for the S3 bucket that will host the static website
    MinLength: 3
    MaxLength: 63
    AllowedPattern: ^[a-zA-Z0-9.-]+$
    ConstraintDescription: 'Must be a valid S3 bucket name.'

  MyIAMRole:
    Type: String
    Description: The IAM role to which the policy will be attached

  DomainName:
    Type: String
    Description: Domain name for the website
    MinLength: 3
    MaxLength: 255
    ConstraintDescription: 'Must be a valid domain name.'

  AcmCertificateArn:
    Type: String
    Description: The ARN of the ACM certificate for the domain

  HostedZoneId:
    Type: String
    Description: The ID of the hosted zone in Route 53 for your domain

Resources:
  # MyIAMPolicy is an IAM policy that grants s3:PutBucketPolicy permissions on the S3 bucket.
  # This policy is attached to the IAM role (MyIAMRole), allowing CloudFormation to update the S3 bucket policy during stack operations.
  MyIAMPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: S3PutBucketPolicyAccess
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: s3:PutBucketPolicy
            Resource: !Sub 'arn:aws:s3:::${S3Bucket}'
      Roles:
        - !Ref MyIAMRole

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      # the bucket name is automatically generated by CloudFormation when the stack is created
      # because the AWS::S3::Bucket resource is used without specifying a BucketName property.
      BucketName: !Ref S3BucketName
      AccessControl: Private # AccessControl: PublicRead
      # OwnershipControls:
      #   Rules:
      #     - ObjectOwnership: BucketOwnerPreferred
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          - Sid: AllowWriteAccess
            Effect: Allow
            Principal: '*'
            Action: s3:GetObject
            Resource: !Sub arn:aws:s3:::${S3Bucket}/*

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt S3Bucket.DomainName
            Id: !Ref S3Bucket #references the logical ID of the S3 bucket resource
            S3OriginConfig:
              OriginAccessIdentity: ''
        Enabled: true
        DefaultRootObject: index.html
        Aliases:
          - !Ref DomainName # Optional. Alternate domain name (CNAME)
        Comment: CloudFront distribution for the static website
        DefaultCacheBehavior:
          TargetOriginId: !Ref S3Bucket #references the logical ID of the S3 bucket resource
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          DefaultTTL: 86400
          MinTTL: 3600
          MaxTTL: 31536000
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCertificateArn
          SslSupportMethod: sni-only
        PriceClass: PriceClass_100 #PriceClass_All(default if not specified) and PriceClass_200

  # Route53RecordSet is added to create a Route 53 record set, linking the domain to the CloudFront distribution.
  Route53RecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId # Replace with your Route 53 hosted zone ID
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2 # CloudFront distributions have a fixed DNS name format (*.cloudfront.net) and a fixed hosted zone ID (Z2FDTNDATAQYW2) associated with them.
      # TTL: '60'

Outputs:
  WebsiteURL:
    Description: URL of the deployed static website
    Value: !GetAtt CloudFrontDistribution.DomainName
    # Value: !Sub 'https://${DomainName}'
